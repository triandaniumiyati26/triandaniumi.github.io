{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Selamat Datang di Halaman Data Mining \u00b6 Commands \u00b6 Nama: Triandani Umiyati NIM: 180411100008 Kelas: Penambangan Data 5C Program Studi: Teknik Informatika Dosen Pengampu: Mula'ab, S.Si, M.Kom","title":"Home"},{"location":"#selamat-datang-di-halaman-data-mining","text":"","title":"Selamat Datang di Halaman Data Mining"},{"location":"#commands","text":"Nama: Triandani Umiyati NIM: 180411100008 Kelas: Penambangan Data 5C Program Studi: Teknik Informatika Dosen Pengampu: Mula'ab, S.Si, M.Kom","title":"Commands"},{"location":"Mengukur Jarak Data/","text":"Mengukur Jarak Data \u00b6 Pengukuran jarak merupakan basis dalam pemetaan. Mengukur Jarak Tipe Numerik \u00b6 Minkowski Distance \u00b6 Minkowski Distanceyang merupakan generalisasi dari beberapa distance space yang ada seperti L1 (Manhattan/City Block) dan L2 (Euclidean), juga telah diimplementasikan. Minkowski menggunakan bilangan order \u03bb. $$ d _ { \\operatorname { min } } = ( \\sum _ { i = 1 } ^ { n } | x _ { i } - y _ { i } | ^ { m } ) ^ { \\frac { 1 } { m } } , m \\geq 1 $$ keterangan: m m = bilangan riel positif x_i x_i dan y_i y_i = dua vektor dalam runang dimensi n n Manhattan distance \u00b6 Manhattan Distance adalah merupakan salah satu teknik yang sering digunakan untuk menentukan kesamaan antara dua buah obyek. Pengukuran ini dihasilkan berdasarkan penjumlahan jarak selisih antara dua buah obyek dan hasil yang didapatkan dari Manhattan Distance bernilai mutlak. Dimana, Manhattan Distance melakukan perhitungan jarak dengan cara tegak lurus. $$ d _ { \\operatorname { man } } = \\sum _ { i = 1 } ^ { n } \\left| x _ { i } - y _ { i } \\right| $$ keterangan : x_i x_i = nilai X pada data latih. y_i y_i = nilai Y pada data uji. m = batas jumlah banyaknya data Jika angka hasil dari rumus tersebut besar, maka tingkatkemiripan antara kedua objek akan semakin kecil dan sebaliknya, jika angka hasil rumus tersebut kecil, maka tingkat kemiripanantara kedua objek akan semakin besar. Objek yang dimaksudadalah data latih dan data uji yang akan dihitung tingkatkemiripannya. Euclidean distance \u00b6 Euclidean distance adalah perhitungan jarak dari 2 buah titik dalam Euclidean space. Euclidean space diperkenalkan oleh Euclid, seorang matematikawan dari Yunani sekitar tahun 300 B.C.E. untuk mempelajari hubungan antara sudut dan jarak. Ini adalah kasus khusus dari jarak Minkowski ketika m = 2. Berikut adalah persamaan EuclideanDistanceuntuk titik yang mempunyai ruang 3 dimensi (Negoro, 2015): Average distance \u00b6 adalah modifikasi dari euclidean distance yang dibuat karena adanya kelemahan dari euclidean distance itu sendiri. $$ d _ { a v e } = \\left ( \\frac { 1 } { n } \\sum _ { i = 1 } ^ { n } ( x _ { i } - y _ { i } ) ^ { 2 } \\right) ^ { \\frac { 1 } { 2 } } $$ keterangan : x,y x,y = titik koordinat dari vektor n n = dimensi Weighted euclidean distance \u00b6 adalah modifikisasi lain dari jarak Euclidean distance yang dapat digunakan. $$ d _ { w e } = \\left ( \\sum _ { i = 1 } ^ { n } w _ { i } ( x _ { i } - y _ { i } \\right) ^ { 2 } ) ^ { \\frac { 1 } { 2 } } $$ keterangan: w_i w_i = bobot yang diberikan pada atribut ke i Chord distance \u00b6 Chord distance adalah salah satu ukuran jarak modifikasi Euclidean distance untuk mengatasi kekurangan dari Euclidean distance. Ini dapat dipecahkan juga dengan menggunakan skala pengukuran yang baik. Jarak ini dapat juga dihitung dari data yang tidak dinormalisasi . $$ d _ { \\text {chord} } = \\left ( 2 - 2 \\frac { \\sum _ { i = 1 } ^ { n } x _ { i } y _ { i } } { | x | _ { 2 } | y | _ { 2 } } \\right) ^ { \\frac { 1 } { 2 } } $$ ||x||_2 ||x||_2 = L^2- norm||x||_2= \\sqrt {\\sum_i=1^nx_i^2} L^2- norm||x||_2= \\sqrt {\\sum_i=1^nx_i^2} Mahalanobis distance \u00b6 Mahalanobis distance berdasarkan data berbeda dengan Euclidean dan Manhattan distances yang bebas antra data dengan data yang lain. Jarak Mahalanobis yang teratur dapat digunakan untuk mengekstraksi hyperellipsoidal clusters. Jarak Mahalanobis dapat mengurangi distorsi yang disebabkan oleh korelasi linier antara fitur dengan menerapkan transformasi pemutihan ke data atau dengan menggunakan kuadrat Jarak mahalanobis. $$ d _ { m a h } = \\sqrt { ( x - y ) S ^ { - 1 } ( x - y ) ^ { T } } $$ keterangan : s s = matrik covariance data Cosine measure \u00b6 Ukuran Cosine similarity lebih banyak digunakan dalam similaritas dokumen $$ Cosine(x,y)=\\frac { \\sum _ { i = 1 } ^ { n } x _ { i } y _ { i } } { | x | _ { 2 } | y | _ { 2 } } $$ keterangan : |y| {2} = Euclidean norm dari vektor y=(y {1} , y_{2} , \\dots , y_{n} ) didefinisikan dengan |y|_{2}=\\sqrt{ y _ { 1 } ^ { 2 } + y _ { 2 } ^ { 2 } + \\ldots + y _ { n } ^ { 2 } } Pearson correlation \u00b6 Pearson correlation banyak digunakan dalam data expresi gen. Ukuran similaritas ini menghitung similaritas antara duan bentuk pola expresi gen. $$ Pearson ( x , y ) = \\frac { \\sum _ { i = 1 } ^ { n } ( x _ { i } - \\mu _ { x } ) ( y _ { i } - \\mu _ { y } ) } { \\sqrt { \\sum _ { i = 1 } ^ { n } ( x _ { i } - y _ { i } ) ^ { 2 } } \\sqrt { \\sum _ { i 2= 1 } ^ { n } ( x _ { i } - y _ { i } ) ^ { 2 } } } $$ Mengukur Jarak Atribut Binary \u00b6 Satu pendekatan melibatkan penghitungan matriks ketidaksamaan dari data biner yang diberikan. Jika semua atribut biner dianggap memiliki bobot yang sama, kita memiliki tabel kontingensi 2 \\times 2 di mana q adalah jumlah atribut yang sama dengan 1 untuk kedua objek i dan j, r adalah jumlah atribut yang sama dengan 1 untuk objek i tetapi 0 untuk objek j, s adalah jumlah atribut yang sama dengan 0 untuk objek i tetapi 1 untuk objek j dan t adalah jumlah atribut yang sama dengan 0 untuk kedua objek i dan j. Jumlah total atribut adalah p, di mana p=q+r+s+t $$ d ( i , j ) = \\frac { r + s } { q + r + s + t } $$ Diberikan dua atribut biner asimetris, pencocokan keduanya 1 (kecocokan positif) kemudian dianggap lebih signifikan daripada kecocokan negatif. Ketidaksamaan berdasarkan atribut-atribut ini disebut asimetris biner dissimilarity, di mana jumlah kecocokan negatif, t, dianggap tidak penting dan dengan demikian diabaikan. Berikut perhitungannya : $$ d ( i , j ) = \\frac { r + s } { q + r + s } $$ Persamaan similarity dibawah ini disebut dengan Jaccard coefficient $$ d ( i , j ) = \\frac { r + s } { q + r + s } $$ Mengukur Jarak Tipe categorical \u00b6 Overlay Metric \u00b6 Overlay Metric adalah ukuran jarak yang paling sederhana ketika semua atribut adalah bertipe nominal $$ d ( x , y ) = \\sum _ { i = 1 } ^ { n } \\delta ( a _ { i } ( x ) , a _ { i } ( y ) ) $$ keterangan : n = banyaknya atribut a_i(x) a_i(x) dan a_i(y) a_i(y) =nilai atribut ke i yaitu A_i A_i dari masing masing objek x dan y \\delta \\ ( a_{ i } ( x ) , a_{ i } ( y ) ) \\delta \\ ( a_{ i } ( x ) , a_{ i } ( y ) ) adalah 0 jika a _ { i } ( x ) = a _ { i } ( y ) a _ { i } ( x ) = a _ { i } ( y ) dan 1 sebaliknya Value Difference Metric (VDM) \u00b6 Versi sederhana dari VDM tanpa skema pembobotan didefinsisikan dengan : $$ d ( x , y ) = \\sum _ { i = 1 } ^ { n } \\sum _ { c = 1 } ^ { C } \\left| P ( c | a _ { i } ( x ) ) - P ( c | a _ { i } ( y ) ) \\right | $$ dimana : C = adalah banyaknya kelas a_i(x),P(c|a_i(x)) a_i(x),P(c|a_i(x)) = probabilitas bersyarat dimana kelas y adalah c dengan atribut A_i A_i memiliki nilai a_i(y) a_i(y) $$ d ( x , y ) = \\sum _ { c = 1 } ^ { C } \\left | P ( c | x ) - P ( c | y ) \\right| $$ diman probabilitas keanggotaan kelas diestimasi dengan P(c|x) dan P(c|y) P(c|x) dan P(c|y) didekati dengan Naive Bayes, Minimum Risk Metric (MRM) \u00b6 MRM meminimumkan risk of misclassification yang didefinisikan dengan : $$ d ( x , y ) = \\sum _ { c = 1 } ^ { C } P ( c | x ) ( 1 - P ( c | y ) ) $$ Mengukur Jarak Tipe Ordinal \u00b6 Menghitung disimilarity terhadap f fitur sebagai berikut: $$ z _ { i f } = \\frac { r _ { i f } - 1 } { M _ { f } - 1 } $$ Menghitung Jarak Tipe Campuran \u00b6 Ketidaksamaan (disimilarity ) antara objek i dan j dinyatakan dengan : $$ d ( i , j ) = \\frac { \\sum _ { f = 1 } ^ { p } \\delta _ { i j } ^ { ( f ) } d _ { i j } ^ { ( f ) } } { \\sum _ { f = 1 } ^ { p } \\delta _ { i j } ^ { ( f ) } } $$","title":"Menghitung Jarak Data"},{"location":"Mengukur Jarak Data/#mengukur-jarak-data","text":"Pengukuran jarak merupakan basis dalam pemetaan.","title":"Mengukur Jarak Data"},{"location":"Mengukur Jarak Data/#mengukur-jarak-tipe-numerik","text":"","title":"Mengukur Jarak Tipe Numerik"},{"location":"Mengukur Jarak Data/#minkowski-distance","text":"Minkowski Distanceyang merupakan generalisasi dari beberapa distance space yang ada seperti L1 (Manhattan/City Block) dan L2 (Euclidean), juga telah diimplementasikan. Minkowski menggunakan bilangan order \u03bb. $$ d _ { \\operatorname { min } } = ( \\sum _ { i = 1 } ^ { n } | x _ { i } - y _ { i } | ^ { m } ) ^ { \\frac { 1 } { m } } , m \\geq 1 $$ keterangan: m m = bilangan riel positif x_i x_i dan y_i y_i = dua vektor dalam runang dimensi n n","title":"Minkowski Distance"},{"location":"Mengukur Jarak Data/#manhattan-distance","text":"Manhattan Distance adalah merupakan salah satu teknik yang sering digunakan untuk menentukan kesamaan antara dua buah obyek. Pengukuran ini dihasilkan berdasarkan penjumlahan jarak selisih antara dua buah obyek dan hasil yang didapatkan dari Manhattan Distance bernilai mutlak. Dimana, Manhattan Distance melakukan perhitungan jarak dengan cara tegak lurus. $$ d _ { \\operatorname { man } } = \\sum _ { i = 1 } ^ { n } \\left| x _ { i } - y _ { i } \\right| $$ keterangan : x_i x_i = nilai X pada data latih. y_i y_i = nilai Y pada data uji. m = batas jumlah banyaknya data Jika angka hasil dari rumus tersebut besar, maka tingkatkemiripan antara kedua objek akan semakin kecil dan sebaliknya, jika angka hasil rumus tersebut kecil, maka tingkat kemiripanantara kedua objek akan semakin besar. Objek yang dimaksudadalah data latih dan data uji yang akan dihitung tingkatkemiripannya.","title":"Manhattan distance"},{"location":"Mengukur Jarak Data/#euclidean-distance","text":"Euclidean distance adalah perhitungan jarak dari 2 buah titik dalam Euclidean space. Euclidean space diperkenalkan oleh Euclid, seorang matematikawan dari Yunani sekitar tahun 300 B.C.E. untuk mempelajari hubungan antara sudut dan jarak. Ini adalah kasus khusus dari jarak Minkowski ketika m = 2. Berikut adalah persamaan EuclideanDistanceuntuk titik yang mempunyai ruang 3 dimensi (Negoro, 2015):","title":"Euclidean distance"},{"location":"Mengukur Jarak Data/#average-distance","text":"adalah modifikasi dari euclidean distance yang dibuat karena adanya kelemahan dari euclidean distance itu sendiri. $$ d _ { a v e } = \\left ( \\frac { 1 } { n } \\sum _ { i = 1 } ^ { n } ( x _ { i } - y _ { i } ) ^ { 2 } \\right) ^ { \\frac { 1 } { 2 } } $$ keterangan : x,y x,y = titik koordinat dari vektor n n = dimensi","title":"Average distance"},{"location":"Mengukur Jarak Data/#weighted-euclidean-distance","text":"adalah modifikisasi lain dari jarak Euclidean distance yang dapat digunakan. $$ d _ { w e } = \\left ( \\sum _ { i = 1 } ^ { n } w _ { i } ( x _ { i } - y _ { i } \\right) ^ { 2 } ) ^ { \\frac { 1 } { 2 } } $$ keterangan: w_i w_i = bobot yang diberikan pada atribut ke i","title":"Weighted euclidean distance"},{"location":"Mengukur Jarak Data/#chord-distance","text":"Chord distance adalah salah satu ukuran jarak modifikasi Euclidean distance untuk mengatasi kekurangan dari Euclidean distance. Ini dapat dipecahkan juga dengan menggunakan skala pengukuran yang baik. Jarak ini dapat juga dihitung dari data yang tidak dinormalisasi . $$ d _ { \\text {chord} } = \\left ( 2 - 2 \\frac { \\sum _ { i = 1 } ^ { n } x _ { i } y _ { i } } { | x | _ { 2 } | y | _ { 2 } } \\right) ^ { \\frac { 1 } { 2 } } $$ ||x||_2 ||x||_2 = L^2- norm||x||_2= \\sqrt {\\sum_i=1^nx_i^2} L^2- norm||x||_2= \\sqrt {\\sum_i=1^nx_i^2}","title":"Chord distance"},{"location":"Mengukur Jarak Data/#mahalanobis-distance","text":"Mahalanobis distance berdasarkan data berbeda dengan Euclidean dan Manhattan distances yang bebas antra data dengan data yang lain. Jarak Mahalanobis yang teratur dapat digunakan untuk mengekstraksi hyperellipsoidal clusters. Jarak Mahalanobis dapat mengurangi distorsi yang disebabkan oleh korelasi linier antara fitur dengan menerapkan transformasi pemutihan ke data atau dengan menggunakan kuadrat Jarak mahalanobis. $$ d _ { m a h } = \\sqrt { ( x - y ) S ^ { - 1 } ( x - y ) ^ { T } } $$ keterangan : s s = matrik covariance data","title":"Mahalanobis distance"},{"location":"Mengukur Jarak Data/#cosine-measure","text":"Ukuran Cosine similarity lebih banyak digunakan dalam similaritas dokumen $$ Cosine(x,y)=\\frac { \\sum _ { i = 1 } ^ { n } x _ { i } y _ { i } } { | x | _ { 2 } | y | _ { 2 } } $$ keterangan : |y| {2} = Euclidean norm dari vektor y=(y {1} , y_{2} , \\dots , y_{n} ) didefinisikan dengan |y|_{2}=\\sqrt{ y _ { 1 } ^ { 2 } + y _ { 2 } ^ { 2 } + \\ldots + y _ { n } ^ { 2 } }","title":"Cosine measure"},{"location":"Mengukur Jarak Data/#pearson-correlation","text":"Pearson correlation banyak digunakan dalam data expresi gen. Ukuran similaritas ini menghitung similaritas antara duan bentuk pola expresi gen. $$ Pearson ( x , y ) = \\frac { \\sum _ { i = 1 } ^ { n } ( x _ { i } - \\mu _ { x } ) ( y _ { i } - \\mu _ { y } ) } { \\sqrt { \\sum _ { i = 1 } ^ { n } ( x _ { i } - y _ { i } ) ^ { 2 } } \\sqrt { \\sum _ { i 2= 1 } ^ { n } ( x _ { i } - y _ { i } ) ^ { 2 } } } $$","title":"Pearson correlation"},{"location":"Mengukur Jarak Data/#mengukur-jarak-atribut-binary","text":"Satu pendekatan melibatkan penghitungan matriks ketidaksamaan dari data biner yang diberikan. Jika semua atribut biner dianggap memiliki bobot yang sama, kita memiliki tabel kontingensi 2 \\times 2 di mana q adalah jumlah atribut yang sama dengan 1 untuk kedua objek i dan j, r adalah jumlah atribut yang sama dengan 1 untuk objek i tetapi 0 untuk objek j, s adalah jumlah atribut yang sama dengan 0 untuk objek i tetapi 1 untuk objek j dan t adalah jumlah atribut yang sama dengan 0 untuk kedua objek i dan j. Jumlah total atribut adalah p, di mana p=q+r+s+t $$ d ( i , j ) = \\frac { r + s } { q + r + s + t } $$ Diberikan dua atribut biner asimetris, pencocokan keduanya 1 (kecocokan positif) kemudian dianggap lebih signifikan daripada kecocokan negatif. Ketidaksamaan berdasarkan atribut-atribut ini disebut asimetris biner dissimilarity, di mana jumlah kecocokan negatif, t, dianggap tidak penting dan dengan demikian diabaikan. Berikut perhitungannya : $$ d ( i , j ) = \\frac { r + s } { q + r + s } $$ Persamaan similarity dibawah ini disebut dengan Jaccard coefficient $$ d ( i , j ) = \\frac { r + s } { q + r + s } $$","title":"Mengukur Jarak Atribut Binary"},{"location":"Mengukur Jarak Data/#mengukur-jarak-tipe-categorical","text":"","title":"Mengukur Jarak Tipe categorical"},{"location":"Mengukur Jarak Data/#overlay-metric","text":"Overlay Metric adalah ukuran jarak yang paling sederhana ketika semua atribut adalah bertipe nominal $$ d ( x , y ) = \\sum _ { i = 1 } ^ { n } \\delta ( a _ { i } ( x ) , a _ { i } ( y ) ) $$ keterangan : n = banyaknya atribut a_i(x) a_i(x) dan a_i(y) a_i(y) =nilai atribut ke i yaitu A_i A_i dari masing masing objek x dan y \\delta \\ ( a_{ i } ( x ) , a_{ i } ( y ) ) \\delta \\ ( a_{ i } ( x ) , a_{ i } ( y ) ) adalah 0 jika a _ { i } ( x ) = a _ { i } ( y ) a _ { i } ( x ) = a _ { i } ( y ) dan 1 sebaliknya","title":"Overlay Metric"},{"location":"Mengukur Jarak Data/#value-difference-metric-vdm","text":"Versi sederhana dari VDM tanpa skema pembobotan didefinsisikan dengan : $$ d ( x , y ) = \\sum _ { i = 1 } ^ { n } \\sum _ { c = 1 } ^ { C } \\left| P ( c | a _ { i } ( x ) ) - P ( c | a _ { i } ( y ) ) \\right | $$ dimana : C = adalah banyaknya kelas a_i(x),P(c|a_i(x)) a_i(x),P(c|a_i(x)) = probabilitas bersyarat dimana kelas y adalah c dengan atribut A_i A_i memiliki nilai a_i(y) a_i(y) $$ d ( x , y ) = \\sum _ { c = 1 } ^ { C } \\left | P ( c | x ) - P ( c | y ) \\right| $$ diman probabilitas keanggotaan kelas diestimasi dengan P(c|x) dan P(c|y) P(c|x) dan P(c|y) didekati dengan Naive Bayes,","title":"Value Difference Metric (VDM)"},{"location":"Mengukur Jarak Data/#minimum-risk-metric-mrm","text":"MRM meminimumkan risk of misclassification yang didefinisikan dengan : $$ d ( x , y ) = \\sum _ { c = 1 } ^ { C } P ( c | x ) ( 1 - P ( c | y ) ) $$","title":"Minimum Risk Metric (MRM)"},{"location":"Mengukur Jarak Data/#mengukur-jarak-tipe-ordinal","text":"Menghitung disimilarity terhadap f fitur sebagai berikut: $$ z _ { i f } = \\frac { r _ { i f } - 1 } { M _ { f } - 1 } $$","title":"Mengukur Jarak Tipe Ordinal"},{"location":"Mengukur Jarak Data/#menghitung-jarak-tipe-campuran","text":"Ketidaksamaan (disimilarity ) antara objek i dan j dinyatakan dengan : $$ d ( i , j ) = \\frac { \\sum _ { f = 1 } ^ { p } \\delta _ { i j } ^ { ( f ) } d _ { i j } ^ { ( f ) } } { \\sum _ { f = 1 } ^ { p } \\delta _ { i j } ^ { ( f ) } } $$","title":"Menghitung Jarak Tipe Campuran"},{"location":"Statistik/","text":"Statistik Deskriptif \u00b6 Rata-rata (Mean) \u00b6 adalah jumlah seluruh datum kemudian dibagi oleh banyaknya datum itu sendiri. Mean dilambangkan dengan huruf kecil dengan garis diatasnya. $$ \\bar x = \\frac{x_1 + x_2 + \\cdots + x_n}{n} $$ Atau $$ \\bar x = \\frac{1}{n} \\sum \\limits^n_{i=1}x_i $$ Median \u00b6 adalah nilai yang di tengah dari data yang telah diurutkan, dari mulai nilai yang terkecil hingga terbesar. $$ M_e = t_b + (\\frac{\\frac{1}{2}n-f_k}{f}) c $$ Dengan: t_b t_b = tepi bawah kelas median n = banyak data f_k f_k = frekuensi kumulatif sebelum kelas median f = frekuensi kelas median c = panjang kelas Modus \u00b6 adalah sebuah nilai data yang paling sering muncul atau data yang mempunyai nilai frekuensi yang paling tinggi. $$ M_o = t_b + (\\frac{d_1}{d_1+d_2})c $$ Dengan : t_b t_b = tepi bawah kelas modus d_1 d_1 = selisih frekuensi kelas modus dengan kelas sebelumnya d_2 d_2 = selisih frekuensi kelas modus dengan kelas sesudahnya c = panjang kelas Ragam (variansi) \u00b6 adalah rata-rata selisih kuadrat antara nilai-nilai individual dengan nilai tengahnya. $$ \\sigma = \\frac { 1 } { N } \\sum _ { i = 1 } ^ { N } ( x _ { i } - \\overline { x } ) ^ { 2 } = ( \\frac { 1 } { N } \\sum _ { i = 1 } ^ { N } x _ { i } ^ { 2 } ) - \\overline { x } ^ { 2 } $$ Standar deviasi \u00b6 adalah nilai statistik yang dimanfaatkan untuk menentukan bagaimana sebaran data dalam sampel, serta seberapa dekat titik data individu ke mean ataupun rata-rata nilai sampel $$ \\sigma ^ { 2 } = \\frac { 1 } { N } \\sum _ { i = 1 } ^ { N } ( x _ { i } - \\overline { x } ) ^ { 2 } = ( \\frac { 1 } { N } \\sum _ { i = 1 } ^ { N } x _ { i } ^ { 2 } ) - \\overline { x } ^ { 2 } $$ Kemiringan kurva (Skewness) \u00b6 merupakan derajat ketidak simetrian (keasimetrian), atau dapat juga disefinisikan sebagai penyimpangan dari kesimetrian dari suatu distribusi. $$ s k=\\frac{\\overline{X}-M o}{s} $$ dengan $$ \\overline{X}-M o \\approx 3(\\overline{X}-M e) $$ maka $$ s k \\approx \\frac{3(\\overline{X}-M e)}{s} $$ Quartile \u00b6 ialah suatu nilai \u2013 nilai yang membagi data yang telah diurutkan ke dalam empat bagian yang nilainya sama besar. Dalam menentukan letak kuartil data tunggal, kita harus melihat kondisi jumlah data (n) terlebih dahulu begitu juga sama halnya dengan cara menentukan kuartil data kelompok. Kuartil pada suatu data dapat didapatkan dengan cara membagi data tersebut secara terurut kedalam empat bagian yang memiliki nilai sama besar. $$ IQR=Q3\u2212Q1 $$","title":"Statistik Deskriptif"},{"location":"Statistik/#statistik-deskriptif","text":"","title":"Statistik Deskriptif"},{"location":"Statistik/#rata-rata-mean","text":"adalah jumlah seluruh datum kemudian dibagi oleh banyaknya datum itu sendiri. Mean dilambangkan dengan huruf kecil dengan garis diatasnya. $$ \\bar x = \\frac{x_1 + x_2 + \\cdots + x_n}{n} $$ Atau $$ \\bar x = \\frac{1}{n} \\sum \\limits^n_{i=1}x_i $$","title":"Rata-rata (Mean)"},{"location":"Statistik/#median","text":"adalah nilai yang di tengah dari data yang telah diurutkan, dari mulai nilai yang terkecil hingga terbesar. $$ M_e = t_b + (\\frac{\\frac{1}{2}n-f_k}{f}) c $$ Dengan: t_b t_b = tepi bawah kelas median n = banyak data f_k f_k = frekuensi kumulatif sebelum kelas median f = frekuensi kelas median c = panjang kelas","title":"Median"},{"location":"Statistik/#modus","text":"adalah sebuah nilai data yang paling sering muncul atau data yang mempunyai nilai frekuensi yang paling tinggi. $$ M_o = t_b + (\\frac{d_1}{d_1+d_2})c $$ Dengan : t_b t_b = tepi bawah kelas modus d_1 d_1 = selisih frekuensi kelas modus dengan kelas sebelumnya d_2 d_2 = selisih frekuensi kelas modus dengan kelas sesudahnya c = panjang kelas","title":"Modus"},{"location":"Statistik/#ragam-variansi","text":"adalah rata-rata selisih kuadrat antara nilai-nilai individual dengan nilai tengahnya. $$ \\sigma = \\frac { 1 } { N } \\sum _ { i = 1 } ^ { N } ( x _ { i } - \\overline { x } ) ^ { 2 } = ( \\frac { 1 } { N } \\sum _ { i = 1 } ^ { N } x _ { i } ^ { 2 } ) - \\overline { x } ^ { 2 } $$","title":"Ragam (variansi)"},{"location":"Statistik/#standar-deviasi","text":"adalah nilai statistik yang dimanfaatkan untuk menentukan bagaimana sebaran data dalam sampel, serta seberapa dekat titik data individu ke mean ataupun rata-rata nilai sampel $$ \\sigma ^ { 2 } = \\frac { 1 } { N } \\sum _ { i = 1 } ^ { N } ( x _ { i } - \\overline { x } ) ^ { 2 } = ( \\frac { 1 } { N } \\sum _ { i = 1 } ^ { N } x _ { i } ^ { 2 } ) - \\overline { x } ^ { 2 } $$","title":"Standar deviasi"},{"location":"Statistik/#kemiringan-kurva-skewness","text":"merupakan derajat ketidak simetrian (keasimetrian), atau dapat juga disefinisikan sebagai penyimpangan dari kesimetrian dari suatu distribusi. $$ s k=\\frac{\\overline{X}-M o}{s} $$ dengan $$ \\overline{X}-M o \\approx 3(\\overline{X}-M e) $$ maka $$ s k \\approx \\frac{3(\\overline{X}-M e)}{s} $$","title":"Kemiringan kurva (Skewness)"},{"location":"Statistik/#quartile","text":"ialah suatu nilai \u2013 nilai yang membagi data yang telah diurutkan ke dalam empat bagian yang nilainya sama besar. Dalam menentukan letak kuartil data tunggal, kita harus melihat kondisi jumlah data (n) terlebih dahulu begitu juga sama halnya dengan cara menentukan kuartil data kelompok. Kuartil pada suatu data dapat didapatkan dengan cara membagi data tersebut secara terurut kedalam empat bagian yang memiliki nilai sama besar. $$ IQR=Q3\u2212Q1 $$","title":"Quartile"}]}